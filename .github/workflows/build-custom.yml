name: Build Custom

on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04-arm
    env:
      VERSION: "6.1.154"
    steps:
      - name: Install Linux mainline ${{ env.VERSION }}
        id: kernel
        run: |
          set -euo pipefail
          KERNEL_URL="https://kernel.ubuntu.com/~kernel-ppa/mainline/v${VERSION}/"
          PAGE=$(wget --quiet -O - "$KERNEL_URL" | grep -A8 -E "Build for amd64|Test amd64")
          ALL_DEB=$(echo "$PAGE" | grep -m1 'all.deb' | cut -d '"' -f 2)
          AMD64_DEB=$(echo "$PAGE" | grep -m1 'amd64.deb' | cut -d '"' -f 2)
          [ -n "$ALL_DEB" ] || { echo "all.deb not found"; exit 1; }
          [ -n "$AMD64_DEB" ] || { echo "amd64.deb not found"; exit 2; }
          wget -nv "${KERNEL_URL}${AMD64_DEB}"
          wget -nv "${KERNEL_URL}${ALL_DEB}"
          sudo dpkg --force-all -i *.deb
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 14
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-14 14
          KVER="$(echo "$ALL_DEB" | cut -d '_' -f 2 | rev | cut -c14- | rev)-generic"
          echo "KVER=$KVER" >> "$GITHUB_ENV"
          echo "kver=$KVER" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4

      - name: Build
        run: make KVER="$KVER" CONFIG_PLATFORM_I386_PC=y CC=cc

      - name: Package artifacts (ZIP only)
        run: |
          set -euo pipefail
          sudo apt-get update -qq
          sudo apt-get install -y -qq zip
          mkdir -p dist
          cp 8189es.ko dist/
          printf "%s\n" "${{ steps.kernel.outputs.kver }}" > dist/KERNEL.txt
          modinfo 8189es.ko > dist/modinfo.txt || true
          (cd dist && zip -r "rtl8189es-${{ steps.kernel.outputs.kver }}.zip" .)

      - name: Upload artifact (dist ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: rtl8189es-${{ steps.kernel.outputs.kver }}
          path: dist/*.zip
          if-no-files-found: error
          retention-days: 14
